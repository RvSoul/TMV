@page "/home/home"
@using TMV.Application.AbnormalRecords.Services;
@using TMV.Application.Tr.Services;
@using TMV.Application.Scale.Services;
@using TMV.DTO.AbnormalRecords;
@using TMV.DTO.Tr;
@using TMV.Web.Pages.AbnormalRecords.ViewModel;
@using TMV.Web.Pages.TransportationRecords.ViewModel;
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager Navigation
@implements IAsyncDisposable
@inherits ProCompontentBase
@inject ITrServiceDM _trRecodeServiceDM
@inject IArServiceDM _arServiceDM
@inject IScaleServiceDM _scale
@attribute [Authorize]


<MRow Style="height: 100%;">
	<MCol Md=8 Sm=12 Class="max-height" Style="padding-bottom:0;">
		<MRow Style="height: 160px">
			<MCol Md=12 Sm=12 Class="max-height" Style="padding-top:0;">
				<div style="padding:10px;display:flex;justify-content:center;">
					<MCard Class="max-height" Style="padding:0 8px 8px 8px;margin-right:32px;">
						<MCardTitle Style="padding:8px 0;"><MIcon Left>mdi-weight-pound</MIcon><span>称重</span></MCardTitle>
						<div style="display:flex;width:200px;justify-content:flex-end;flex-wrap:wrap;">
							<div style="background-color:yellow;height:64px;line-height:64px;text-align:right;font-size:48px;width:200px;font-weight:bolder;padding:0 24px;">55</div>
							<div style="background-color:green;width:24px;height:24px;border-radius:24px;margin-top:8px;margin-right:8px;"></div><div style="height:24px;line-height:24px;margin-top:8px;">稳定</div>
						</div>
					</MCard>
					<MCard Class="max-height" Style="padding:0 8px 8px 8px;margin-right:16px;">
						<MCardTitle Style="padding:8px 0;"><MIcon Left>mdi-line-scan</MIcon><span>红外线</span></MCardTitle>
						<div style="display:flex;">
							<div style="width:24px;height:96px;background-color:red;"></div>
							<div style="height:96px;padding:0 24px;">
								<div style="display:flex;justify-content:space-between;">
									<div style="background-color:green;width:16px;height:16px;border-radius:16px;margin-bottom:8px;"></div>
									<div style="background-color:green;width:16px;height:16px;border-radius:16px;margin-bottom:8px;"></div>
								</div>
								<div style="width:200px;background-color:#aaa;height:48px;"></div>
								<div style="display:flex;justify-content:space-between;">
									<div style="background-color:green;width:16px;height:16px;border-radius:16px;margin-top:8px;"></div>
									<div style="background-color:green;width:16px;height:16px;border-radius:16px;margin-top:8px;"></div>
								</div>
							</div>
							<div style="width:24px;height:96px;background-color:red;"></div>
						</div>
					</MCard>
				</div>
			</MCol>
		</MRow>
		<MRow Style="height: calc(100% - 400px)">
			<MCol Md=12 Sm=12 Class="max-height">
				<MCard Class="max-height">
					<MContainer Fluid>
						<MRow Align="@AlignTypes.Center">
							<MCol Cols="6">
								<MSelect Items="_items"
										 @bind-Value="@value1"
										 ItemText="u => u.Label"
										 ItemValue="u => u.Value"
										 Filled
										 Label="Standard"
										 Dense></MSelect>
							</MCol>

							<MCol Cols="6">
								<MSelect Items="_items"
										 @bind-Value="@value2"
										 ItemText="u => u.Label"
										 ItemValue="u => u.Value"
										 Filled
										 Label="Filled style"
										 Dense></MSelect>
							</MCol>

							<MCol Cols="6">
								<MSelect Items="_items"
										 @bind-Value="@value3"
										 ItemText="u => u.Label"
										 ItemValue="u => u.Value"
										 Label="Outlined style"
										 Dense
										 Outlined></MSelect>
							</MCol>

							<MCol Cols="6">
								<MSelect Items="_items"
										 @bind-Value="@value4"
										 ItemText="u => u.Label"
										 ItemValue="u => u.Value"
										 Label="Solo field"
										 Dense
										 Solo></MSelect>
							</MCol>
						</MRow>
					</MContainer>
				</MCard>
			</MCol>
		</MRow>
		<MRow Style="height: 240px">
			<MCol Md=12 Sm=12 Class="max-height" Style="padding-bottom:0;">
				<MCard Class="max-height">
					<MCardTitle Style="padding:8px 16px;"><MIcon Left>mdi-audio-video</MIcon><span>过衡记录</span></MCardTitle>
					<MDataTable Style="width:100%;" Dense Headers="_headers" Items=" tpPage.Datas" ItemsPerPage="tpPage.PageSize" HideDefaultFooter Class="table-border-none pt-2">
						<HeaderColContent Context="header">
							<span class="text-subtitle">@header.Text</span>
						</HeaderColContent>
					</MDataTable>
				</MCard>
			</MCol>
		</MRow>
	</MCol>
	<MCol Md=4 Sm=12 Class="max-height">
		<MCard Class="max-height">
		</MCard>
	</MCol>
</MRow>


@code {
	public TransportationRecordsPage tpPage = new();
	public AbnormalRecordsPage abRePage = new();


	private HubConnection? hubConnection;
	private List<string> messages = new List<string>();

	private string value1;
	private string value2;
	private string value3;
	private string value4;

	public class Item
	{
		public string Label { get; set; }
		public string Value { get; set; }
		public Item(string label, string value)
		{
			Label = label;
			Value = value;
		}
	}

	List<Item> _items = new()
		{
			new Item("Foo", "1"),
			new Item("Bar", "2"),
			new Item("Fizz", "3"),
			new Item("Buzz", "4"),
		};

	protected override async Task OnInitializedAsync()
	{
		hubConnection = new HubConnectionBuilder()
			.WithUrl(Navigation.ToAbsoluteUri("/chathub"))
			.Build();

		hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
		{
			var encodedMsg = $"{user}: {message}";
			messages.Add(encodedMsg);
			InvokeAsync(StateHasChanged);
		});

		await hubConnection.StartAsync();
	}

	public bool IsConnected =>
		hubConnection?.State == HubConnectionState.Connected;

	public async ValueTask DisposeAsync()
	{
		if (hubConnection is not null)
		{
			await hubConnection.DisposeAsync();
		}
	}
	List<DataTableHeader<TransportationRecordsDTO>> _headers = new()
	{
		new() { Text = "物流单号", Value = nameof(TransportationRecordsDTO.Code), CellClass = "" },
		new() { Text = "车牌号", Value = nameof(TransportationRecordsDTO.PlateNumber)},
		new() { Text = "矿号", Value = nameof(TransportationRecordsDTO.MineCode) },
		new() { Text = "毛量", Value = nameof(TransportationRecordsDTO.RoughWeight) },
		new() { Text = "皮重", Value = nameof(TransportationRecordsDTO.TareWeight) },
		new() { Text = "净重", Value = nameof(TransportationRecordsDTO.NetWeight) },
		new() { Text = "进厂时间", Value = nameof(TransportationRecordsDTO.STime) },
		new() { Text = "出厂时间", Value = nameof(TransportationRecordsDTO.ETime) },
		new() { Text = "状态", Value = nameof(TransportationRecordsDTO.State) }
	};
	List<DataTableHeader<AbnormalRecordsDTO>> _saheaders = new()
	{
		 new() { Text = "运输编号", Value = nameof(AbnormalRecordsDTO.Code), CellClass = "" },
		 new() { Text = "异常原因", Value = nameof(AbnormalRecordsDTO.AbnormalCause) }

	};
	protected override void OnInitialized()
	{
		Initialize();
		AbReInitialize();
	}
	public void Initialize()
	{
		var dto = new Request_TransportationRecords();
		var rest = _trRecodeServiceDM.GetTransportationRecordsList(dto);
		var result = new TransportationRecordsPage(rest.Data) { PageIndex = rest.PageIndex, PageSize = rest.PageSize };
		tpPage = result;
	}
	public void AbReInitialize()
	{
		var dto = new Request_AbnormalRecords();
		var rest = _arServiceDM.GetAbnormalRecordsList(dto);
		var result = new AbnormalRecordsPage(rest.Data) { PageIndex = rest.PageIndex, PageSize = rest.PageSize };
		abRePage = result;
	}
}
