@inherits LayoutComponentBase
@inject NavigationManager Navigation
@using TMV.Web.Core.Const;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
<MApp>
	@if (Navigation.Uri == Navigation.BaseUri + "screen")
	{
		<div><Screen></Screen></div>
	}
	else
	{
		<CascadingValue Value="UserId">
			<MAppBar Elevation=0 App MaxHeight=48 Height=48
				 Class="@($"{(_pageTab == PageModes.PageTab ?"mx-6":"mx-6 rounded-b-4")}")">
				<Favorite />
				<MSpacer />
				<Login />
			</MAppBar>

			<Navigation />

			<MMain Class="fill-lighten-1">
				@if (_pageTab == PageModes.PageTab)
				{
					<PageTabs>
						@Body
					</PageTabs>
				}
				else
				{
					<div class="pa-6 max-width">
						<Breadcrumb></Breadcrumb>
						@Body
					</div>
				}
			</MMain>
			<Settings @bind-PageModel="_pageTab" @bind-Show=_showSetting />
		</CascadingValue>
	}
	<MOverlay Value="overlay">
		<MProgressCircular indeterminate
						   Size="20"></MProgressCircular>
						   正在初始化数据.......
	</MOverlay>
</MApp>

@code {
	private bool _showSetting;
	private string? _pageTab;
	private bool forceRender { get; set; } = false;
	public string UserId { get; set; }
	private bool overlay = true;
	[Inject]
	public IPopupService PopupService
	{
		get;
		set;
	}
	[Inject]
	ProtectedLocalStorage sessionStorage { get; set; }
	[CascadingParameter]
	private Task<AuthenticationState>? authenticationState { get; set; }
	protected async override Task OnInitializedAsync()
	{
		if (authenticationState is not null)
		{
			var authState = await authenticationState;
			var user = authState?.User;
			if (user?.Identity is not null && user.Identity.IsAuthenticated)
			{
				overlay = false;
				UserId = user.Claims.FirstOrDefault(it => it.Type == ClaimConst.UserId).Value;
				await PopupService.ToastSuccessAsync($"欢迎{user.Identity.Name} 进入系统！！");
				await InvokeAsync(StateHasChanged);
			}
		}
	}
	protected async override Task OnAfterRenderAsync(bool firstRender)
	{
		base.OnAfterRender(firstRender);
		if (firstRender || forceRender)
		{
			forceRender = false;
			var usering = await sessionStorage.GetAsync<string>("identity");
			//var usering =  sessionStorage.GetItemAsync<string>("UserId");
			if (!usering.Success)
			{
				await PopupService.ToastErrorAsync($"登录已过期，请重新登录！！");
				Navigation.NavigateTo($"{Navigation.BaseUri}pages/authentication/login-v2");
			}
			else
			{
				StateHasChanged();
			}
		}
	}
}